{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/app/food-bg.jpg","components/menu-list-item/index.js","components/menu-list-item/menu-list-item.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/menu-list/menu-list.js","components/menu-list/index.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/pages/itemPage.js","components/app-header/index.js","components/app-header/app-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/resto-service.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuListItem","_ref","menuItem","onAddToCart","title","price","url","category","react_default","a","createElement","className","src","alt","onClick","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","components_resto_service_context","Consumer","RestoService","Object","assign","menuLoaded","newMenu","type","payload","menuRequested","menuError","Spinner","Error","MenuList","_this","this","getMenuItems","then","res","catch","_this$props","menuItems","loading","error","addedToCart","components_error","components_spinner","items","map","components_menu_list_item","key","id","menu_list_View","Component","mapDispatchToProps","connect","state","menu","View","MainPage","components_menu_list","generateOrder","item","pcs","deleteFromCart","CartTable","_ref2","length","Fragment","setOrder","CartPage","components_cart_table","ItemPage","_this2","find","el","match","params","concat","AppHeader","totalPrice","react_router_dom","to","cartIcon","App","style","background","Background","components_app_header","total","react_router","path","exact","component","ErrorBoundry","setState","children","_apiBase","fetch","response","ok","json","getResource","console","log","order","getOrderNumber","number","newOrder","method","headers","Content-Type","body","JSON","stringify","orderNumber","initialState","reduser","arguments","undefined","action","objectSpread","itemInd","findIndex","itemInState","newItem","toConsumableArray","slice","idx","itemIndex","store","createStore","restoService","ReactDOM","render","es","error_boundry","Provider","value","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.e42e4668.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-bg.698e5e80.jpg\";","import MenuListItem from './menu-list-item';\nexport default MenuListItem;","import React from 'react';\nimport './menu-list-item.scss';\n\nconst MenuListItem = ({menuItem, onAddToCart}) => {\n    const {title, price, url, category} = menuItem;\n    return (\n       \n            <li className=\"menu__item\">\n                    <div className=\"menu__title\">{title}</div>\n                    <img className=\"menu__img\" src={url} alt={title}></img>\n                    <div className=\"menu__category\">Category: <span>{category}</span></div>\n                    <div className=\"menu__price\">Price: <span>{price}$</span></div>\n                    <button onClick={() => onAddToCart()} className=\"menu__btn\">Add to cart</button>\n            </li>\n       \n    )\n}\n\nexport default MenuListItem;","import RestoServiceContext from './resto-service-context';\n\nexport default RestoServiceContext;","import React from 'react';\r\n\r\nconst RestoServiceContext = React.createContext();\r\nexport default RestoServiceContext;","import WithRestoService from './with-resto-service';\n\nexport default WithRestoService;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n       return (\n           <RestoServiceContext.Consumer>\n               {\n                    (RestoService) => {\n                        return <Wrapped {...props} RestoService={RestoService}/>\n                   }\n               }\n           </RestoServiceContext.Consumer>\n       ) \n    };\n};\n\nexport default WithRestoService;","const menuLoaded = (newMenu) => {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu\r\n    }\r\n}\r\nconst menuRequested = () => {\r\n    return {\r\n        type: 'MENU_REQUESTED'\r\n    }\r\n}\r\nconst menuError = () => {\r\n    return {\r\n        type: 'MENU_ERROR'\r\n    }\r\n}\r\nconst addedToCart = (id) => {\r\n    return {\r\n        type: 'ITEM_ADD_TO_CART',\r\n        payload: id\r\n    }\r\n}\r\nconst deleteFromCart = (id) => {\r\n    return {\r\n        type: 'ITEM_REMOVE_FROM_CART',\r\n        payload: id\r\n    }\r\n}\r\nconst clearCart = () => {\r\n    return {\r\n        type: 'CLEAR_CART'\r\n    }\r\n}\r\nexport {\r\n    menuLoaded,\r\n    menuRequested,\r\n    menuError,\r\n    addedToCart,\r\n    deleteFromCart,\r\n    clearCart\r\n};","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\n\nconst Spinner = () => {\n    return <div className=\"spinner\">loading...</div>\n}\n\nexport default Spinner;","import Error from './error';\n\nexport default Error;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import React, {Component} from 'react';\nimport MenuListItem from '../menu-list-item';\nimport {connect} from 'react-redux';\nimport WithRestoService from '../hoc';\nimport {menuLoaded, menuRequested, menuError, addedToCart} from '../../actions';\nimport Spinner from '../spinner';\nimport Error from '../error';\n\nimport './menu-list.scss';\n\nclass MenuList extends Component {\n    componentDidMount() {\n        this.props.menuRequested();\n        const {RestoService} = this.props;\n        RestoService.getMenuItems()\n            .then(res => this.props.menuLoaded(res))\n            .catch(res => this.props.menuError(res));\n\n    }\n\n\n    render() {\n        const {menuItems, loading, error, addedToCart} = this.props;\n\n        if(error) {\n            return <Error/>\n        }\n\n        if (loading) {\n            return <Spinner/>\n        }\n\n        const items = menuItems.map(menuItem => {\n            return <MenuListItem \n                        key={menuItem.id} \n                        menuItem={menuItem}\n                        onAddToCart={() => addedToCart(menuItem.id)}/>\n        })\n\n        return (\n            <View items={items}/>\n        )\n    }\n};\nconst mapStateToProps = (state) => {\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        error: state.error\n    }\n} \n\nconst mapDispatchToProps = {\n    menuLoaded,\n    menuRequested,\n    menuError,\n    addedToCart\n}; \n\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(MenuList));\n\nconst View = ({items}) => {\n    return (\n        <ul className=\"menu__list\">\n            {items}            \n        </ul>\n    )\n} ","import MenuList from './menu-list';\nexport default MenuList;","import React from 'react';\nimport MenuList from '../menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {deleteFromCart} from '../../actions';\nimport WithRestoService from '../hoc';\n\nimport './cart-table.scss';\n\nconst CartTable = ({items, deleteFromCart, RestoService}) => {\n    if( items.length === 0){\n        return (<div className=\"cart__title\"> Ваша корзина пуста :( </div>)\n    }\n    return (\n        <>\n            <div className=\"cart__title\">Ваш заказ:</div>\n            <div className=\"cart__list\">\n                {\n                    items.map(item => {\n                        const {title, price, url, id, pcs} = item;\n                        return(\n                        <div key={id} className=\"cart__item\">\n                            <img src={url} className=\"cart__item-img\" alt={title}></img>\n                            <div className=\"cart__item-title\">{title}</div>\n                            <div className=\"cart__item-price\">{price}$ * {pcs}</div>\n                            <div onClick={() => deleteFromCart(id)} className=\"cart__close\">&times;</div>\n                        </div>\n                        )\n                    })\n                }\n            </div>\n            \n            <button onClick = {() => {RestoService.setOrder( generateOrder(items))} } className = \"order\">Оформить заказ</button>\n        </>\n    );\n};\nconst generateOrder = (items) => {\n    const newOrder = items.map(item => {\n        return {\n            id: item.id,\n            pcs: item.pcs\n        }\n    })\n    return newOrder;\n}\n\nconst mapStateToProps = ({items}) => {\n    return{\n        items\n    }\n};\nconst mapDispatchToProps = {\n    deleteFromCart\n}; \nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(CartTable));","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport WithRestoService from '../hoc/';\r\nimport Spinner from '../spinner';\r\nimport {menuLoaded, menuRequested, menuError} from '../../actions';\r\n\r\nimport './itemPage.css';\r\n\r\nclass ItemPage extends Component {\r\n\r\n    componentDidMount() {\r\n        if( this.props.menuItems.length === 0){\r\n            this.props.menuRequested();\r\n\r\n            const {RestoService} = this.props;\r\n            RestoService.getMenuItems()\r\n                .then(res => this.props.menuLoaded(res))\r\n                .catch(error => this.props.menuError());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loading) {\r\n            return (\r\n                <div className = \"item_page\">\r\n                    <Spinner/>\r\n                </div>\r\n            )\r\n        }\r\n        const item = this.props.menuItems.find(el => +el.id === +this.props.match.params.id)\r\n        const{title, url, category, price} = item;\r\n\r\n        return (\r\n            <div className = \"item_page\">\r\n                <div className=\"menu__item item_block\">\r\n                     <div className=\"menu__title\">{title}</div>\r\n                    <img className=\"menu__img\" src={url} alt={title}></img>\r\n                    <div className=\"menu__category\">Category: <span>{category}</span></div>\r\n                    <div className=\"menu__price\">Price: <span>{price}$</span></div>\r\n                    <button className=\"menu__btn\">Add to cart</button>\r\n                    <span className = {`menu__category_Img ${category}`}></span> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps =  (state) =>{\r\n    return {\r\n        menuItems: state.menu,\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    menuLoaded: menuLoaded,\r\n    menuRequested,\r\n    menuError\r\n}\r\n\r\nexport default WithRestoService ()( connect(mapStateToProps, mapDispatchToProps)(ItemPage) );","import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport './app-header.scss';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst AppHeader = ({totalPrice}) => {\n    return (\n        <header className=\"header\">\n            <Link to ={'/'} className = \"header__link\">Menu</Link>\n            <Link to = \"/cart\" className = \"header__link\">\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {totalPrice} $\n            </Link>\n        </header>\n    )\n};\nconst mapStateToProps = ({totalPrice}) => {\n    return {\n        totalPrice\n    }\n}\nexport default connect(mapStateToProps)(AppHeader); ","import App from './app';\n\nexport default App;","import React from 'react';\nimport {MainPage, CartPage, ItemPage} from '../pages';\nimport AppHeader from '../app-header';\n\nimport Background from './food-bg.jpg';\nimport { Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n    return (\n        <div style={{background: `url(${Background}) center center/cover no-repeat`}} className=\"app\">\n            <AppHeader total={50}/>\n            <Switch>\n                <Route path='/' exact component={MainPage}/>\n                <Route path='/cart'  component={CartPage}/>\n                <Route path = '/:id' component ={ItemPage}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n\n    state = {\n        error: false\n    }\n\n    componentDidCatch() {\n        this.setState({error: true});\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Error/>\n        }\n        return this.props.children;\n    }\n}","\r\n\r\nexport default class RestoService{\r\n    _apiBase = 'http://localhost:3000'; \r\n\r\n    async getResource(url) {\r\n        const response = await fetch(`${this._apiBase}${url}`);\r\n        if (!response.ok){\r\n            throw new Error('Server Error');\r\n        }        \r\n        return await response.json();\r\n    }\r\n    async getMenuItems() {\r\n        return await this.getResource('/menu/');\r\n    }\r\n\r\n    async getItem(id) {\r\n        const res = await this.getResource('/menu/');\r\n        console.log(res);\r\n        const item = res.find( (el) => {\r\n            console.log(`el.id: ${el.id}, id: ${id}`);\r\n            return el.id === +id;\r\n        }) \r\n        console.log(item);\r\n        return item;\r\n    }\r\n\r\n    async setOrder(order) {\r\n        const number = await this.getOrderNumber();\r\n        const newOrder = {\r\n            id: number,\r\n            order: order\r\n        }\r\n        const response = await fetch(`${this._apiBase}/orders`, {\r\n            method: \"POST\", \r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(newOrder)\r\n        });\r\n        if (!response.ok){\r\n            throw new Error('json error'); \r\n        }\r\n        // if(response.ok) {\r\n        //     // let ids = newOrder.order.map(item => item.id);\r\n        //     const mapStateToProps = ({state}) => {\r\n        //         return{\r\n        //             ...state,\r\n        //             items: []\r\n\r\n        //         }\r\n        //     };           \r\n        //     WithRestoService()(connect(mapStateToProps)(CartTable));            \r\n        // }\r\n        // if(response.ok) {\r\n        //     return connect(this.mapStateToProps, this.mapDispatchToProps);     \r\n        // }\r\n\r\n    }\r\n\r\n    async getOrderNumber(){\r\n        const res = await this.getResource('/orders/');\r\n        const orderNumber = res.length+1;\r\n\r\n        return orderNumber\r\n    }\r\n}","\r\nconst initialState = {\r\n    menu: [],\r\n    loading: true,\r\n    error: false,\r\n    items: [],\r\n    totalPrice: 0\r\n}\r\nconst reduser = (state = initialState, action) => {\r\n    console.log(state);\r\n    switch (action.type) {\r\n        case 'MENU_LOADED': \r\n            return {\r\n                ...state,\r\n                menu: action.payload,\r\n                loading: false,\r\n                error: false\r\n            };\r\n        case 'MENU_REQUESTED': \r\n            return {\r\n                ...state,\r\n                menu: state.menu,\r\n                loading: true,\r\n                error: false\r\n            };\r\n        case 'MENU_ERROR': \r\n            return {\r\n                ...state,\r\n                menu: state.menu,\r\n                loading: true,\r\n                error: true\r\n            };\r\n        case 'ITEM_ADD_TO_CART':        \r\n            const id = action.payload;\r\n\r\n            const itemInd = state.items.findIndex(item => item.id === id);\r\n            if (itemInd >= 0){\r\n                const itemInState = state.items.find(item => item.id === id);\r\n                const newItem = {\r\n                    ...itemInState,\r\n                    pcs: ++itemInState.pcs\r\n                }\r\n                return {\r\n                    ...state, \r\n                    items: [\r\n                        ...state.items.slice(0, itemInd),\r\n                        newItem,\r\n                        ...state.items.slice(itemInd + 1)\r\n                    ],\r\n                    totalPrice: state.totalPrice + newItem.price\r\n                }\r\n\r\n            } \r\n\r\n            const item = state.menu.find(item => item.id === id);\r\n            const newItem = {\r\n                title: item.title,\r\n                price: item.price,\r\n                url: item.url,\r\n                id: item.id,\r\n                pcs: 1\r\n            };            \r\n            return{\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    newItem\r\n                ],\r\n                totalPrice: state.totalPrice + newItem.price\r\n            };\r\n        case 'ITEM_REMOVE_FROM_CART':\r\n            const idx = action.payload;\r\n            const itemIndex = state.items.findIndex(item => item.id === idx);\r\n            const price = state.items[itemIndex]['price'] * state.items[itemIndex]['pcs'];\r\n            return{\r\n                ...state,\r\n                items: [\r\n                    ...state.items.slice(0, itemIndex),\r\n                    ...state.items.slice(itemIndex+1)                    \r\n                ],\r\n                totalPrice: state.totalPrice - price\r\n            };\r\n        case 'CLEAR_CART':\r\n            return {\r\n                ...state,\r\n                items: []\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n} \r\nexport default reduser;","import { createStore } from 'redux';\r\nimport reduser from './reducers';\r\n\r\nconst store = createStore(reduser);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport ErrorBoundry from \"./components/error-boundry\";\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context';\nimport store from './store';\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}