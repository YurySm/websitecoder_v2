{"version":3,"sources":["reportWebVitals.js","components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","styled","div","props","colored","AppHeader","liked","posts","SearchPanel","state","term","onUpdateSearch","bind","e","target","value","this","setState","className","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","elements","item","obj","key","isEmpty","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","App","data","maxId","deleteItem","addItem","index","findIndex","elem","before","slice","after","body","newItem","old","items","length","indexOf","allPosts","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+gBCJd,IAAMQ,EAASC,IAAOC,IAAV,KAMa,SAAAC,GAAK,OAAIA,EAAMC,QAAU,MAAQ,WCR3CC,EDmBG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACvB,OACI,eAACP,EAAD,WACI,6CACA,+BAAKO,EAAL,mJAAyCD,SEvBtCE,E,kDCEX,WAAaL,GAAQ,IAAD,8BAChB,cAAOA,IACFM,MAAQ,CACTC,KAAM,IAEV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALN,E,2DAQLC,GACX,IAAMH,EAAOG,EAAEC,OAAOC,MACtBC,KAAKC,SAAS,CAACP,SACfM,KAAKb,MAAMQ,eAAeD,K,+BAI1B,OACI,uBACIQ,UAAU,4BACVC,KAAK,OACLC,YAAY,yFACZC,SAAUL,KAAKL,qB,GArBUW,aCD1BC,E,kDCGX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IACDqB,QAAU,CACX,CAACC,KAAM,MAAOC,MAAO,sBACrB,CAACD,KAAM,OAAQC,MAAO,uEAJX,E,qDAOT,IAAD,OACCF,EAAUR,KAAKQ,QAAQG,KAAI,YAAoB,IAAlBF,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAAW,EACf,EAAKvB,MAA/ByB,EADyC,EACzCA,OAAQC,EADiC,EACjCA,eAETC,EADSF,IAAWH,EACH,WAAa,wBACpC,OACI,wBAEIN,KAAK,SACLD,UAAS,cAASY,GAClBC,QAAW,kBAAMF,EAAeJ,IAJpC,SAKMC,GAJGD,MAOjB,OACI,qBAAKP,UAAU,YAAf,SACKM,Q,GAxB6BF,a,QCF/BU,E,uKCGD,IAAD,EACwEhB,KAAKb,MAA3EuB,EADF,EACEA,MAAOO,EADT,EACSA,SAAUC,EADnB,EACmBA,kBAAmBC,EADtC,EACsCA,cACvCC,EAAa,+CASjB,OAXK,EACqDC,YAItDD,GAAc,cALb,EACgEE,OAOjEF,GAAc,SAId,sBAAKlB,UAAWkB,EAAhB,UACI,sBAAMlB,UAAU,sBAAsBa,QAASI,EAA/C,SACKT,IAEL,sBAAKR,UAAU,kDAAf,UACI,wBACAC,KAAK,SACLD,UAAU,kBACVa,QAASG,EAHT,SAII,mBAAGhB,UAAU,iBAGjB,wBACAC,KAAK,SACLD,UAAU,mBACVa,QAASE,EAHT,SAII,mBAAGf,UAAU,oBAEjB,mBAAGA,UAAU,0B,GAhCKI,a,QCDvBiB,ECeE,SAAC,GAAyD,IAAxDhC,EAAuD,EAAvDA,MAAO0B,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,cAE7CK,EAAWjC,EAAMoB,KAAI,SAACc,GAExB,GAAqB,kBAATA,GAoBhB,SAAiBC,GACb,IAAI,IAAIC,KAAOD,EAEX,OAAO,EAEX,OAAO,EAzB0BE,CAAQH,GAAO,CAAC,IACtCI,EAAoBJ,EAApBI,GAAOC,EAD8B,YACjBL,EADiB,QAE5C,OAEI,aADA,CACA,MAAavB,UAAU,kBAAvB,SAMI,cAAC,EAAD,2BAAkB4B,GAAlB,IACAb,SAAY,kBAAMA,EAASY,IAC3BV,cAAiB,kBAAMA,EAAcU,IACrCX,kBAAqB,kBAAMA,EAAkBW,QATxCA,OAwBrB,OACI,cAACE,EAAA,EAAD,CAAW7B,UAAU,WAArB,SACKsB,KCjDEQ,E,kDCEX,WAAa7C,GAAQ,IAAD,8BAChB,cAAMA,IACDM,MAAQ,CACTwC,KAAM,IAEV,EAAKC,cAAgB,EAAKA,cAActC,KAAnB,gBACrB,EAAKuC,SAAW,EAAKA,SAASvC,KAAd,gBANA,E,0DASNC,GACVG,KAAKC,SAAS,CACVgC,KAAMpC,EAAEC,OAAOC,U,+BAIdF,GACLA,EAAEuC,iBACFpC,KAAKb,MAAMkD,MAAMrC,KAAKP,MAAMwC,MAC5BjC,KAAKC,SAAS,CACVgC,KAAM,O,+BAKV,OACI,uBACA/B,UAAU,sBACViC,SAAUnC,KAAKmC,SAFf,UAII,uBACIhC,KAAK,OACLC,YAAY,0HACZF,UAAU,8BACVG,SAAUL,KAAKkC,cAEfnC,MAAOC,KAAKP,MAAMwC,OAEtB,wBACI9B,KAAK,SACLD,UAAU,4BAFd,qE,GAtCyBI,a,yKCgBzC,IAAMgC,EAAWrD,IAAOC,IAAV,KCjBCqD,E,kDD2BX,WAAYpD,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CAET+C,KAAM,CACF,CACI9B,MAAO,uBACPW,WAAW,EACXC,MAAM,EACNO,GAAI,GAER,CACInB,MAAO,kBACPW,WAAW,EACXC,MAAM,EACNO,GAAI,GAER,CACInB,MAAO,oBACPW,WAAW,EACXC,MAAM,EACNO,GAAI,IAGZnC,KAAM,GACNkB,OAAQ,OAEZ,EAAK6B,MAAQ,EAEb,EAAKC,WAAa,EAAKA,WAAW9C,KAAhB,gBAClB,EAAK+C,QAAU,EAAKA,QAAQ/C,KAAb,gBACf,EAAKsB,kBAAoB,EAAKA,kBAAkBtB,KAAvB,gBACzB,EAAKuB,cAAgB,EAAKA,cAAcvB,KAAnB,gBACrB,EAAKD,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKiB,eAAiB,EAAKA,eAAejB,KAApB,gBAlCP,E,uDAoCPiC,GAER7B,KAAKC,UAAS,YAAa,IAAXuC,EAAU,EAAVA,KAENI,EAAQJ,EAAKK,WAAU,SAAAC,GAAI,OAAIA,EAAKjB,KAAOA,KAE3CkB,EAASP,EAAKQ,MAAM,EAAGJ,GACvBK,EAAQT,EAAKQ,MAAMJ,EAAM,GAG/B,MAAO,CACHJ,KAHQ,sBAAOO,GAAP,YAAkBE,U,8BAQ9BC,GACJ,IAAMC,EAAU,CACZzC,MAAOwC,EACP7B,WAAW,EACXC,MAAM,EACNO,KAAM7B,KAAKyC,OAEfzC,KAAKC,UAAS,YAAa,IAAXuC,EAAU,EAAVA,KAGZ,MAAO,CACHA,KAHQ,sBAAOA,GAAP,CAAaW,U,wCAQftB,GACd7B,KAAKC,UAAS,YAAa,IAAXuC,EAAU,EAAVA,KACNI,EAAQJ,EAAKK,WAAU,SAAAC,GAAI,OAAIA,EAAKjB,KAAOA,KAE3CuB,EAAMZ,EAAKI,GACXO,EAAO,2BAAOC,GAAP,IAAY/B,WAAY+B,EAAI/B,YAGzC,MAAO,CACHmB,KAFQ,sBAAOA,EAAKQ,MAAM,EAAGJ,IAArB,CAA6BO,GAA7B,YAAyCX,EAAKQ,MAAMJ,EAAM,W,oCAMhEf,GACV7B,KAAKC,UAAS,YAAa,IAAXuC,EAAU,EAAVA,KACNI,EAAQJ,EAAKK,WAAU,SAAAC,GAAI,OAAIA,EAAKjB,KAAOA,KAE3CuB,EAAMZ,EAAKI,GACXO,EAAO,2BAAOC,GAAP,IAAY9B,MAAO8B,EAAI9B,OAGpC,MAAO,CACHkB,KAFQ,sBAAOA,EAAKQ,MAAM,EAAGJ,IAArB,CAA6BO,GAA7B,YAAyCX,EAAKQ,MAAMJ,EAAM,W,iCAOnES,EAAO3D,GACd,OAAoB,IAAhBA,EAAK4D,OACED,EAGJA,EAAMzC,QAAO,SAACa,GACjB,OAAOA,EAAKf,MAAM6C,QAAQ7D,IAAS,O,iCAIhC2D,EAAOzC,GACd,MAAe,SAAXA,EACOyC,EAAMzC,QAAO,SAAAa,GAAI,OAAIA,EAAKH,QAE1B+B,I,qCAIA3D,GACXM,KAAKC,SAAS,CAACP,W,qCAGJkB,GACXZ,KAAKC,SAAS,CAACW,a,+BAKT,IAAD,EACwBZ,KAAKP,MAA3B+C,EADF,EACEA,KAAM9C,EADR,EACQA,KAAMkB,EADd,EACcA,OACbtB,EAAQkD,EAAK5B,QAAO,SAAAa,GAAI,OAAIA,EAAKH,QAAMgC,OAGvCE,EAAWhB,EAAKc,OAEhBG,EAAezD,KAAK0D,WAAY1D,KAAK2D,WAAWnB,EAAM9C,GAAOkB,GAEnE,OACI,eAAC0B,EAAD,WACI,cAAC,EAAD,CACIhD,MAAOA,EACPC,MAAOiE,IAEX,sBAAKtD,UAAU,sBAAf,UACI,cAAC,EAAD,CACAP,eAAgBK,KAAKL,iBACrB,cAAC,EAAD,CACIiB,OAAQA,EACRC,eAAgBb,KAAKa,oBAI7B,cAAC,EAAD,CACItB,MAAOkE,EACPxC,SAAYjB,KAAK0C,WACjBxB,kBAAoBlB,KAAKkB,kBACzBC,cAAgBnB,KAAKmB,gBAEzB,cAAC,EAAD,CACIkB,MAASrC,KAAK2C,iB,GA5JDrC,aEjBjCsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BzF,M","file":"static/js/main.2019c532.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n            display: flex;\r\n            align-items: flex-end;\r\n            justify-content: space-between;\r\n            h1 {\r\n                font-size: 24px;\r\n                color: ${props => props.colored ? 'red' : 'black'};\r\n                :hover {\r\n                    color: blue;\r\n                }\r\n            }\r\n            h2 {\r\n                font-size: 1.2rem;\r\n                color: grey;\r\n            }\r\n        `\r\n\r\nconst AppHeader = ({liked, posts}) => {\r\n    return (\r\n        <Header>\r\n            <h1>Yury Smolka</h1>\r\n            <h2>{posts} записей, из них понравилось {liked}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    } \r\n    \r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"  \r\n                onChange={this.onUpdateSearch}      \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props; // this.props.filter\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return(\r\n                <button \r\n                    key={name} \r\n                    type=\"button\" \r\n                    className={`btn ${clazz}`}\r\n                    onClick = {() => onFilterSelect(name)}\r\n                    >{label}</button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, {Component} from 'react';\r\n\r\nexport default class PostList extends Component {\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between'\r\n\r\n        if(important) {\r\n            classNames += ' important';\r\n        }\r\n        if(like) {\r\n            classNames += ' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span className=\"app-list-item-label\" onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-item-center\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n    \r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i> \r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n\r\n// const PostListItem = ({label, important=false}) => {\r\n\r\n//     let classNames = 'app-list-item d-flex justify-content-between'\r\n//     if(important) {\r\n//         classNames += ' important';\r\n//     }\r\n\r\n//     return (\r\n//         <div className={classNames}>\r\n//             <span className=\"app-list-item-label\">\r\n//                 {label}\r\n//             </span>\r\n//             <div className=\"d-flex justify-content-center align-item-center\">\r\n//                 <button type=\"button\" className=\"btn-star btn-sm\">\r\n//                     <i className=\"fa fa-star\"></i>\r\n//                 </button>\r\n\r\n//                 <button type=\"button\" className=\"btn-trash btn-sm\">\r\n//                     <i className=\"fa fa-trash-o\"></i>\r\n//                 </button>\r\n//                 <i className=\"fa fa-heart\"></i> \r\n//             </div>\r\n//         </div> \r\n//     )\r\n// }\r\n\r\n\r\n// export default PostListItem;","import PostList from './post-list'; \r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport {ListGroup} from 'reactstrap';\r\n\r\n\r\n// const PostList = () => {\r\n//     return (\r\n//         <ul className=\"app-list list-group\">\r\n//             <PostListItem label='Going to learn React' important/>\r\n//             <PostListItem label='That is so good'/>\r\n//             <PostListItem label='id need a breck...'/>\r\n//         </ul>\r\n//     )\r\n// }\r\n\r\n// props приходит, например с сервера\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) => {    \r\n        // Простой способ проверки на объект + содержится ли в нем информация\r\n        if ( typeof item === 'object' && isEmpty(item) ){ \r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                // key={id} -- чтоб не ругался react нужен id поста\r\n                <li key={id} className=\"list-group-item\">\r\n                    {/* <PostListItem \r\n                    label={item.label} \r\n                    important={item.important}/> */}\r\n\r\n                    {/* ES8 */}\r\n                    <PostListItem {...itemProps}\r\n                    onDelete = {() => onDelete(id)}\r\n                    onToggleLiked = {() => onToggleLiked(id)}\r\n                    onToggleImportant = {() => onToggleImportant(id)}\r\n                    />\r\n                </li>\r\n            )\r\n        }     \r\n    })\r\n\r\n    function isEmpty(obj) {\r\n        for(let key in obj)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup>\r\n\r\n    )\r\n}\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e){\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n            className=\"bottom-panel d-flex\"\r\n            onSubmit={this.onSubmit}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем Вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    // контролируемый объект\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n} \r\n","import React, {Component}from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\nimport '../app-header/app-header.css';\r\nimport '../post-add-form/post-add-form.css';\r\nimport '../post-list/post-list.css';\r\nimport '../post-list-item/post-list-item.css';\r\nimport '../post-status-filter/post-status-filter.css';\r\nimport '../search-panel/search-panel.css';\r\n\r\nimport styled from 'styled-components';\r\n//создает компонент div с указанными стилями\r\nconst AppBlock = styled.div`\r\n        margin: 0 auto;\r\n        max-width: 800px;\r\n    `\r\n// const StyledAppBlock = styled(AppBlock)`\r\n//         background-color: gray;\r\n//     `\r\n\r\nexport default class App extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // данные для постов например с сервера\r\n            data: [\r\n                {\r\n                    label: 'Going to learn React',\r\n                    important: true,\r\n                    like: false,\r\n                    id: 1\r\n                },\r\n                {\r\n                    label: 'That is so good',\r\n                    important: false,\r\n                    like: false,\r\n                    id: 2\r\n                },\r\n                {\r\n                    label: 'i need a breck...',\r\n                    important: false,\r\n                    like: false,\r\n                    id: 3\r\n                }\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        }\r\n        this.maxId = 4;\r\n\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n    }\r\n    deleteItem (id) {\r\n        // state напрямую изменить нельзя\r\n        this.setState(({data}) => {\r\n            // findIndex - получение индекса\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            // делим data на 2 части до и после удаляемого эл-та\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index+1);\r\n            const newArr = [...before, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            like: false,\r\n            id: ++this.maxId\r\n        }\r\n        this.setState(({data}) => {\r\n            const newAdd = [...data, newItem];\r\n\r\n            return {\r\n                data: newAdd\r\n            }\r\n        });\r\n    } \r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\r\n            return {\r\n                data: newArr\r\n            }            \r\n        });\r\n    }\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index+1)];\r\n            return {\r\n                data: newArr\r\n            }            \r\n        });\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term)  {\r\n        this.setState({term})\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter})\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        // item => item.like -- такая запись значит, что перебираем \r\n        // все эл-ты и в кот like == true -- те и возвращаем\r\n        const allPosts = data.length;    \r\n        \r\n        const visiblePosts = this.filterPost( this.searchPost(data, term), filter);\r\n\r\n        return(\r\n            <AppBlock>\r\n                <AppHeader \r\n                    liked={liked}\r\n                    posts={allPosts}/>            \r\n    \r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n    \r\n                \r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete = {this.deleteItem}\r\n                    onToggleImportant= {this.onToggleImportant}\r\n                    onToggleLiked= {this.onToggleLiked}/>\r\n    \r\n                <PostAddForm\r\n                    onAdd = {this.addItem}/>\r\n            </AppBlock>\r\n        )\r\n    }\r\n}\r\n","import App from './app'\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n// class WhoAmI extends Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = {\n//       years: 26 \n//     }\n//     // привязка к конкретному экземпляру\n//     // первый вариант привязки обработчика события при помощи bind()\n//     // this.nextYear = this.nextYear.bind(this);\n\n//     // второй спрособ - прямо в конструктор\n//     // this.nextYear = () => {\n//     //     this.setState(state => ( {\n//     //       years: ++state.years\n//     //     }))\n//     // }\n//   }\n//   // третий вариант, не в объекте, а запишется в объект\n//   nextYear = () => {\n//     this.setState(state => ( {\n//       years: ++state.years\n//     }))\n// }\n//   // для первого варианта, когда функция отдкльно\n//   // nextYear() {\n//   //   this.setState(state => ( {\n//   //     years: ++state.years\n//   //   }))\n//   // }\n\n//   render() {\n//     const {name, surname, link} = this.props;\n//     const {years} = this.state;\n//     return (\n//       <>  \n//         <button onClick={this.nextYear}>++</button>\n//         <h1>My name is {name}, surname - {surname}, years = {years} </h1>\n//         <a href={link}>my profile</a> \n//         <br/>  <br/>\n//       </>\n//     )\n//   }\n// }\n\n\n// function All () {\n//   return (\n//     <>\n//       <WhoAmI name=\"John\" surname=\"Smith\" link=\"facebook.com\"/>\n//       <WhoAmI name=\"Sam\" surname=\"Winchaster\" link=\"facebook.com\"/>\n//       <WhoAmI name=\"John\" surname=\"Week\" link=\"facebook.com\"/>   \n//     </>\n//   )\n// }\n\n\n// ReactDOM.render(\n// <All/>,\n//  document.getElementById('root'));"],"sourceRoot":""}